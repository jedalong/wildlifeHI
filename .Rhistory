library(lmerTest)
library(MuMIn)
library(tidyr)
library(car)
library(corrplot)
library(fmsb)
library(ggrepel)
library(scales)
user = "matth"
allTrails = as.data.frame(t(read.csv(sprintf("C:\\Users\\%s\\OneDrive - The University of Western Ontario\\DataMaster\\Regression\\AllTrailsSummaryParksParkAttendancePopLess100K.csv", user), header=TRUE, row.names = "Name")))
flickr = as.data.frame(t(read.csv(sprintf("C:\\Users\\%s\\OneDrive - The University of Western Ontario\\DataMaster\\Regression\\PUD_JustParksWithOfficialCount3.csv", user), header = TRUE, row.names = "Year")))
strava = as.data.frame(t(read.csv(sprintf("C:\\Users\\%s\\OneDrive - The University of Western Ontario\\DataMaster\\Regression\\SUD_JustParksWithOfficialCount.csv", user), header= TRUE, row.names = c("sum","sum_intensity"))))
officialCounts = as.data.frame(t(read.csv(sprintf("C:\\Users\\%s\\OneDrive - The University of Western Ontario\\DataMaster\\Regression\\parksAttendance2001_2023_3.csv", user), header = TRUE, row.names = "Place")))
officialCounts$Names <- row.names(officialCounts)
officialCounts$Names <- gsub("\\.", " ", officialCounts$Names)
row.names(officialCounts) <- officialCounts$Names
telusCounts = as.data.frame(read.csv(sprintf("C:\\Users\\%s\\OneDrive - The University of Western Ontario\\DataMaster\\Telus\\unique\\TelusCounts_19_22_0.csv", user), header = TRUE, row.names = "Place", check.names = FALSE))
allData = as.data.frame(read.csv(sprintf("C:\\Users\\%s\\OneDrive - The University of Western Ontario\\DataMaster\\Regression\\regressionFileUpdateFeb2024.csv", user), header=TRUE, row.names = "Name", check.names = FALSE))
allData$Names <- row.names(allData)
add_suffix_to_integer_columns <- function(df, suffix) {
col_names <- names(df)
int_cols <- sapply(df, is.integer)
col_names[int_cols] <- paste0(col_names[int_cols], suffix)
names(df) <- col_names
return(df)
}
officialCounts <- add_suffix_to_integer_columns(officialCounts, ".PCC")
#creates a column for each of the 'unique' datasets summarised so it is daily unique visits for the whole year each year from telus
telus19 <- read.csv("C:/Users/matth/OneDrive - The University of Western Ontario/DataMaster/Telus/daily2019.csv")
telus20 <- read.csv("C:/Users/matth/OneDrive - The University of Western Ontario/DataMaster/Telus/daily2020.csv")
telus21 <- read.csv("C:/Users/matth/OneDrive - The University of Western Ontario/DataMaster/Telus/daily2021.csv")
telus22 <- read.csv("C:/Users/matth/OneDrive - The University of Western Ontario/DataMaster/Telus/daily2022.csv")
telus23 <- read.csv("C:/Users/matth/OneDrive - The University of Western Ontario/DataMaster/Telus/daily2023.csv")
telus19_summary <- telus19 %>% group_by(input_geoid) %>% summarise('2019.yearly_unique_count' = sum(as.numeric(count)))
telus20_summary <- telus20 %>% group_by(input_geoid) %>% summarise('2020.yearly_unique_count' = sum(as.numeric(count)))
telus21_summary <- telus21 %>% group_by(input_geoid) %>% summarise('2021.yearly_unique_count' = sum(as.numeric(count)))
telus22_summary <- telus22 %>% group_by(input_geoid) %>% summarise('2022.yearly_unique_count' = sum(as.numeric(count)))
telus23_summary <- telus23 %>% group_by(input_geoid) %>% summarise('2023.yearly_unique_count' = sum(as.numeric(count)))
merged_telus <- merge(telus19_summary, telus20_summary, by = "input_geoid", all = TRUE)
merged_telus <- merge(merged_telus, telus21_summary, by = "input_geoid", all = TRUE)
merged_telus <- merge(merged_telus, telus22_summary, by = "input_geoid", all = TRUE)
merged_telus <- merge(merged_telus, telus23_summary, by = "input_geoid", all = TRUE)
telus_pairing <- read.csv("C:/Users/matth/OneDrive - The University of Western Ontario/DataMaster/Regression/parkTowerPairing.csv", row.names = 'X')
merged_telus <- merge(merged_telus, telus_pairing, by.x="input_geoid", by.y = "geoid")
merged_df <- merge(allData, officialCounts, by = "Names", all = TRUE)
merged_df <- merge(merged_df, merged_telus, by="Names", all=TRUE)
long_data <- gather(merged_df, key, value, -"sum", -"sum_intensity", -"SumCompletionsAllTrails", -"CountOfLines", -"Names", -'NEAR_FID', -'NEAR_DIST', -'Join_Count', -'telus_coun', -'PostPatchO', -'Shape_Leng', -'Shape_Area', -'Var.2', -"completionsPerTrail", -"input_geoid")
long_data <- separate(long_data, key, into = c("year", "variable"), sep = "\\.")
long_data <- spread(long_data, variable, value)
long_data$year <- as.numeric(long_data$year)
long_data_flickr <- long_data[!is.na(long_data$PUD),] %>% .[.$PUD != 0, ] %>% .[!is.na(.$PCC),] %>% .[.$PCC != 0,]
long_data_flickr_summarized_mean <- long_data %>% .[!is.na(.$PCC),] %>% group_by(Names) %>% summarise(PUD = mean(PUD), PCC = mean(PCC))
long_data_flickr_summarized_sum <- long_data %>% .[!is.na(.$PCC),] %>% group_by(Names) %>% summarise(PUD = sum(PUD), PCC = sum(PCC))
#long_data_flickr <- long_data[!is.na(long_data$PCC),] %>% .[.$PCC != 0,]
# long_data_allTrails <- long_data[!is.na(long_data$completionsPerTrail),] %>% subset(., select = -c(Names)) %>% .[.$completionsPerTrail != 0, ] %>% .[!is.na(.$PCC),] %>% .[.$PCC != 0,]
long_data_allTrails <- long_data %>% .[.$year == 2022,] %>% .[!is.na(.$completionsPerTrail),]%>%  .[.$completionsPerTrail != 0, ] %>% .[!is.na(.$PCC),] %>% .[.$PCC != 0,]
long_data_allTrails_summarized <- long_data_allTrails %>% group_by(Names) %>% summarise(completionsPerTrail = mean(completionsPerTrail), PCC = mean(PCC))
#long_data_allTrails <- long_data[!is.na(long_data$PCC),] %>% .[.$PCC != 0,]
# long_data_strava <- long_data[!is.na(long_data$sum_intensity),] %>% subset(., select = -c(Names)) %>% .[.$sum_intensity != 0, ] %>% .[!is.na(.$PCC),] %>% .[.$PCC != 0,]
#long_data_strava <- long_data[!is.na(long_data$sum_intensity),] %>% .[.$sum_intensity != 0, ] %>% .[!is.na(.$PCC),] %>% .[.$PCC != 0,]
long_data_strava <- long_data %>% .[.$year == 2022,] %>% .[!is.na(.$PCC),] %>% .[.$PCC != 0,]
long_data_strava_summarized <- long_data_strava %>%  group_by(Names) %>% summarise(sum_intensity = mean(sum_intensity), PCC = mean(PCC))
long_data_summarized <- merge(long_data_strava_summarized, long_data_allTrails_summarized, by="Names") %>% merge(., long_data_flickr_summarized_sum)
long_data_summarized$PCC.t <- (long_data_summarized$PCC.x + long_data_summarized$PCC.y + long_data_summarized$PCC)/3
long_data_allTrails_strava_summarized <- merge(long_data_strava_summarized, long_data_allTrails_summarized, by="Names")
long_data_allTrails_strava_summarized$PCC <- (long_data_allTrails_strava_summarized$PCC.x + long_data_allTrails_strava_summarized$PCC.y)/2
# long_data_no_name_column <- subset(long_data, select = -c(Names))
long_data_years_with_telus <- long_data[!is.na(long_data$yearly_unique_count),]
long_data_telus <- long_data_years_with_telus[!is.na(long_data_years_with_telus$PCC),] %>% .[.$PCC != 0,] %>%  .[.$yearly_unique_count != 0,] #%>% .[.$Names != "Fathom.Five.National.Marine.Park",] %>% .[.$Names != "Banff.National.Park",] %>%  .[.$location == 2,]
head(long_data)
# allTrails$Names <- rownames(allTrails)
# flickr$Names <- rownames(flickr)
# strava$Names <- rownames(strava)
# officialCounts$Names <- rownames(officialCounts)
# telusCounts$Names <- rownames(officialCounts)
#
# merged_df <- merge(officialCounts, flickr, by = "Names", all = TRUE,  suffixes = c(".PCC",".PUD"))
# df <- merge(strava, telusCounts, by = "Names", all = TRUE)
# merged_df <- merge(merged_df, df, by = "Names", all = TRUE)
# merged_df <- merge(merged_df, allTrails, by = "Names", all = TRUE)
#
# # Define custom colors and shapes
# custom_colors <- c("#E41A1C", "#377EB8", "#4DAF4A", "#FF7F00", "#FFFF33", "#A65628", "#000000")
# custom_shapes <- c('square','circle','triangle','diamond','cross')  # You can customize the shapes based on your preference
# custom_colors <- c("A", "B", "C", "D", "E", "F", "G")
# custom_shapes <- c('1','2','3','4')
#
# # Create a mapping between set_id and color/shape
# set_mapping <- data.frame(
#   Names = unique(merged_df$Names),
#   color = rep(custom_colors, length.out = length(unique(merged_df$Names))),
#   shape = rep(custom_shapes, length.out = length(unique(merged_df$Names)))
# )
# set_mapping$grouped <- paste(set_mapping$color, set_mapping$shape, sep="")
# # Merge the mapping with the original data
# merged_df <- merge(merged_df, set_mapping, by = "Names")
#
# #
# # rownames(merged_df) <- merged_df$RowNames
# # merged_df$RowNames <- NULL
banff = subset(long_data, Names == "Banff National Park", select = -c(Names))
state1 <- c(rep(c(rep("N", 7), rep("Y", 7)), 2))
year <- rep(c(2003:2009), 4)
group1 <- c(rep("C", 14), rep("E", 14))
group2 <- paste(state1, group1, sep = "")
beta <- c(0.16,0.15,0.08,0.08,0.18,0.48,0.14,0.19,0.00,0.00,0.04,0.08,0.27,0.03,0.11,0.12,0.09,0.09,0.10,0.19,0.16,0.00,0.11,0.07,0.08,0.09,0.19,0.10)
lcl <- c(0.13,0.12,0.05,0.05,0.12,0.35,0.06,0.13,0.00,0.00,0.01,0.04,0.20,0.00,0.09,0.09,0.06,0.06,0.07,0.15,0.11,0.00,0.07,0.03,0.05,0.06,0.15,0.06)
ucl <- c(0.20,0.20,0.13,0.14,0.27,0.61,0.28,0.27,0.00,1.00,0.16,0.16,0.36,0.82,0.14,0.15,0.13,0.13,0.15,0.23,0.21,0.00,0.15,0.14,0.12,0.12,0.23,0.16)
data <- data.frame(state1,year,group1,group2,beta,lcl,ucl)
pd <- position_dodge(.65)
ggplot(data = data,aes(x= year, y = beta, colour = group2, shape = group2)) +
geom_point(position = pd, size = 4) +
geom_errorbar(aes(ymin = lcl, ymax = ucl), colour = "black", width = 0.5, position = pd) +
scale_colour_manual(name = "Treatment & State",
labels = c("Control, Non-F", "Control, Flwr", "Exclosure, Non-F", "Exclosure, Flwr"),
values = c("blue", "red", "blue", "red")) +
scale_shape_manual(name = "Treatment & State",
labels = c("Control, Non-F", "Control, Flwr", "Exclosure, Non-F", "Exclosure, Flwr"),
values = c(19, 19, 17, 17))
# Sample data
set.seed(42)
data <- data.frame(
x = rnorm(27),
y = rnorm(27),
set_id = sample(1:28, 27, replace = FALSE),
legend_entry = paste("X:", round(rnorm(27), 2))
)
# Define custom colors and shapes
custom_colors <- c("#E41A1C", "#377EB8", "#4DAF4A", "#FF7F00", "#FFFF33", "#A65628", "#000000")
custom_shapes <- c('square','circle','triangle','diamond','cross')  # You can customize the shapes based on your preference
custom_colors <- c("A", "B", "C", "D", "E", "F", "G")
custom_shapes <- c('1','2','3','4')
# Create a mapping between set_id and color/shape
set_mapping <- data.frame(
set_id = unique(data$set_id),
color = rep(custom_colors, length.out = length(unique(data$set_id))),
shape = rep(custom_shapes, length.out = length(unique(data$set_id))),
legend_entry = unique(data$set_id)
)
set_mapping$grouped <- paste(set_mapping$color, set_mapping$shape, sep="")
# Merge the mapping with the original data
data <- merge(data, set_mapping, by = "set_id")
# Create a ggplot with points colored and shaped by set_id
ggplot(data = data, aes(x, y, col = grouped, shape = grouped)) +
geom_point(size = 3) +
#geom_text_repel(aes(label = set_mapping$grouped), show.legend = TRUE, force = 5) +  # Add text labels
scale_color_manual(name = "legend",
labels = data$grouped,
values = c("#E41A1C", "#E41A1C", "#E41A1C", "#E41A1C", "#377EB8", "#377EB8", "#377EB8", "#377EB8", "#4DAF4A", "#4DAF4A", "#4DAF4A", "#4DAF4A", "#FF7F00", "#FF7F00", "#FF7F00", "#FF7F00",  "#FFFF33","#FFFF33","#FFFF33","#FFFF33", "#A65628","#A65628","#A65628","#A65628", "#000000", "#000000", "#000000")) +
scale_shape_manual(name = "legend",
labels = data$grouped,
values = c('square','circle','triangle','diamond','square','circle','triangle', 'diamond','square','circle','triangle','diamond','square','circle','triangle','diamond','square','circle', 'triangle','diamond','square','circle','triangle','diamond','square','circle','triangle')) +
theme_minimal()
# library(grid)
# library(gridGraphics)
# legend <- cowplot::get_legend(flickr_plot)
# grid.newpage()
# png(sprintf("C:\\Users\\%s\\OneDrive - The University of Western Ontario\\DataMaster\\Regression\\legend.png", user), width = 1600, height =1200, units = 'px')
# grid.draw(legend)
# dev.off()
data_table = long_data_flickr_summarized_sum
data_table$normFlickr <- data_table$PUD/max(data_table$PUD)
#c1 <- cor(data_table)
#(c1, method = "number",number.cex=0.75)
# m1 = lmer((as.numeric(PCC))~as.numeric(PUD) + (1|Names), data=data_table)
# r.squaredGLMM(m1)
# m2 = lmer(log(as.numeric(PCC))~log(as.numeric(PUD)) + (1|Names), data = data_table)
# #summary(m2)
# cat("Log:", r.squaredGLMM(m2), "\n")
#
# m2 = lmer(sqrt(as.numeric(PCC))~sqrt(as.numeric(PUD)) + (1|Names), data = data_table)
# cat("Sqrt:", r.squaredGLMM(m2), "\n")
m1 = lm((as.numeric(PCC))~as.numeric(PUD), data=data_table)
cat("Norm:", summary(m1)$adj.r.squared, "\n")
m1 = lm(log(as.numeric(PCC))~log(as.numeric(PUD)), data=data_table)
cat("Log:", summary(m1)$adj.r.squared, "\n")
m1 = lm(sqrt(as.numeric(PCC))~sqrt(as.numeric(PUD)), data=data_table)
cat("Sqrt:", summary(m1)$adj.r.squared, "\n")
flickr_plot_bw <- ggplot(data = data_table, aes(x = (log(PUD)), y = (log(PCC))))+#, col = grouped, shape = grouped)) +
geom_point(size = 2) +  # Add scatterplot points
geom_smooth(method = "lm", formula = y ~ x, color = "blue") +
# Add a linear regression line
#geom_label(data = subset(data_table, Names == "Prince Edward Island National Park"), aes(label = Names)) +   # this allows a data label so I can understand what things are in this.
labs(title = "", x = "Log Transformed Photo User Day per Year", y = "Log Transformed Parks Canada Official Visitor Count") +
#change this from none to bottom to produce a legend and then run the code chunk above this one to render it into a png file
theme(legend.position = 'none', plot.title = element_text(hjust = 0.5, size = 22), legend.text=element_text(size=24), axis.title = element_text(size=18), axis.text.x = element_text(size = 12), axis.text.y = element_text(size = 12))+
scale_y_continuous(breaks = seq(0, ceiling(max(log(data_table$PCC))), by = 1))+
guides(color = guide_legend(nrow=9))#+
# scale_x_continuous(trans='log') +
# scale_y_continuous(labels = scales::label_number(), trans='log') #+
#coord_trans(x="log", y="log")
flickr_plot_bw
#ggsave("C:/Users/mketchin/OneDrive - The University of Western Ontario/Thesis/PaperOne/figure_flickr_plot_bw.png", plot = flickr_plot_bw, scale = 2)
data_table = long_data_allTrails_summarized
#data_table$normAllTrails <- data_table$completionsPerTrail/max(data_table$completionsPerTrail)
m2 = lm(PCC~(completionsPerTrail), data=data_table)
summary(m2)
r.squaredGLMM(m2)
m2 = lm(log(PCC)~log(completionsPerTrail), data = data_table)
summary(m2)
#cat("Log:", r.squaredGLMM(m2), "\n")
m2 = lm(sqrt(PCC)~sqrt(completionsPerTrail), data = data_table)
summary(m2)
#cat("Sqrt:", r.squaredGLMM(m2), "\n")
allTrails_plot_bw <- ggplot(data = data_table, aes(x = log(as.numeric(completionsPerTrail)), y = log(as.numeric(PCC))))+#, col = grouped, shape = grouped)) +
geom_point(size = 2) +  # Add scatterplot points
geom_smooth(method = "lm", formula = y ~ x, color = "blue") + # Add a linear regression line
#geom_label(data = subset(data_table, Names == "Banff National Park"), aes(log(completionsPerTrail), log(PCC), label = Names)) +   # this allows a data label so I can understand what things are in this.
labs(title = "", x = "Log Transformed AllTrails Completions", y = "Log Transformed Parks Canada Official Visitor Count") +
theme(legend.position = 'none', plot.title = element_text(hjust = 0.5, size = 22), legend.text=element_text(size=24), axis.title = element_text(size=18), axis.text.x = element_text(size = 12), axis.text.y = element_text(size = 12))+
guides(color = guide_legend(nrow=9))#+
#scale_x_continuous(trans='log') +
#scale_y_continuous(labels = scales::label_number(), trans='log')# +
#coord_trans(x="log", y="log")
allTrails_plot_bw
#ggsave("C:/Users/mketchin/OneDrive - The University of Western Ontario/Thesis/PaperOne/figure_alltrails_plot_bw.png", plot = allTrails_plot_bw, scale = 2)
data_table <- long_data_strava_summarized
#data_table$normStrava <- data_table$sum_intensity/max(data_table$sum_intensity)
m3 = lm(PCC~(sum_intensity), data = data_table)
summary(m3)
r.squaredGLMM(m3)
m2 = lm(log(PCC)~log(sum_intensity), data = data_table)
summary(m2)
cat("Log:", r.squaredGLMM(m2), "\n")
m2 = lm(sqrt(PCC)~sqrt(sum_intensity), data = data_table)
summary(m2)
cat("Sqrt:", r.squaredGLMM(m2), "\n")
strava_plot_bw <- ggplot(data = data_table, aes(x = log(sum_intensity), y = log(PCC)))+#, col = grouped, shape = grouped)) +
geom_point(size = 2) +  # Add scatterplot points
geom_smooth(method = "lm", formula = (y) ~ poly(x, 1), color = "blue") +  # Add a linear regression line
#geom_label(data = subset(data_table, Names == "Mount Revelstoke National Park"), aes(log(sum_intensity), log(PCC), label = paste0(Names))) +   # this allows a data label so I can understand what things are in this.
labs(title = "", x = "Log Transformed Strava Intensity Sum", y = "Log Transformed Parks Canada Official Visitor Count") +
theme(legend.position = 'none', plot.title = element_text(hjust = 0.5, size = 22), legend.text=element_text(size=24), axis.title = element_text(size=18), axis.text.x = element_text(size = 12), axis.text.y = element_text(size = 12))#+
#ylim(0, max(log(data_table$PCC)))+
#xlim(0, max(log(data_table$sum_intensity)))#+
#scale_x_continuous(trans='log') +
#scale_y_continuous(labels = scales::label_number(), trans='log') +
#coord_trans(x="log", y="log")
strava_plot_bw
#ggsave("C:/Users/mketchin/OneDrive - The University of Western Ontario/Thesis/PaperOne/figure_strava_plot_bw.png", plot = strava_plot_bw, scale = 2)
data_table <- long_data_telus
#data_table$normStrava <- data_table$sum_intensity/max(data_table$sum_intensity)
m3 = lm(PCC~(yearly_unique_count), data = data_table)
summary(m3)
r.squaredGLMM(m3)
m2 = lm(log(PCC)~log(yearly_unique_count), data = data_table)
summary(m2)
cat("Log:", r.squaredGLMM(m2), "\n")
m2 = lm(sqrt(PCC)~sqrt(yearly_unique_count), data = data_table)
summary(m2)
cat("Sqrt:", r.squaredGLMM(m2), "\n")
telus_plot_bw <- ggplot(data = data_table, aes(x = log(yearly_unique_count), y = log(PCC)))+#, col = grouped, shape = grouped)) +
geom_point(size = 2) +  # Add scatterplot points
geom_smooth(method = "lm", formula = (y) ~ poly(x, 1), color = "blue") +  # Add a linear regression line
#geom_label(data = subset(data_table, Names == "Mount Revelstoke National Park"), aes(log(sum_intensity), log(PCC), label = paste0(Names))) +   # this allows a data label so I can understand what things are in this.
labs(title = "", x = "Log Transformed Telus Yearly Unique", y = "Log Transformed Parks Canada Official Visitor Count") +
theme(legend.position = 'none', plot.title = element_text(hjust = 0.5, size = 22), legend.text=element_text(size=24), axis.title = element_text(size=18), axis.text.x = element_text(size = 12), axis.text.y = element_text(size = 12))#+
#ylim(0, max(log(data_table$PCC)))+
#xlim(0, max(log(data_table$sum_intensity)))#+
#scale_x_continuous(trans='log') +
#scale_y_continuous(labels = scales::label_number(), trans='log') +
#coord_trans(x="log", y="log")
telus_plot_bw
data_table <- long_data_telus
#data_table$normStrava <- data_table$sum_intensity/max(data_table$sum_intensity)
m3 = lm(PCC~(yearly_unique_count), data = data_table)
summary(m3)
r.squaredGLMM(m3)
m2 = lm(log(PCC)~log(yearly_unique_count), data = data_table)
summary(m2)
cat("Log:", r.squaredGLMM(m2), "\n")
#m2 = lm(sqrt(PCC)~sqrt(yearly_unique_count), data = data_table)
#summary(m2)
#cat("Sqrt:", r.squaredGLMM(m2), "\n")
telus_plot_bw <- ggplot(data = data_table, aes(x = log(yearly_unique_count), y = log(PCC)))+#, col = grouped, shape = grouped)) +
geom_point(size = 2) +  # Add scatterplot points
geom_smooth(method = "lm", formula = (y) ~ poly(x, 1), color = "blue") +  # Add a linear regression line
#geom_label(data = subset(data_table, Names == "Mount Revelstoke National Park"), aes(log(sum_intensity), log(PCC), label = paste0(Names))) +   # this allows a data label so I can understand what things are in this.
labs(title = "", x = "Log Transformed Telus Yearly Unique", y = "Log Transformed Parks Canada Official Visitor Count") +
theme(legend.position = 'none', plot.title = element_text(hjust = 0.5, size = 22), legend.text=element_text(size=24), axis.title = element_text(size=18), axis.text.x = element_text(size = 12), axis.text.y = element_text(size = 12))#+
#ylim(0, max(log(data_table$PCC)))+
#xlim(0, max(log(data_table$sum_intensity)))#+
#scale_x_continuous(trans='log') +
#scale_y_continuous(labels = scales::label_number(), trans='log') +
#coord_trans(x="log", y="log")
telus_plot_bw
print(coef(m2)[2])
data_table <- long_data_telus
#data_table$normStrava <- data_table$sum_intensity/max(data_table$sum_intensity)
m3 = lm(PCC~(yearly_unique_count), data = data_table)
summary(m3)
r.squaredGLMM(m3)
m2 = lm(log(PCC)~log(yearly_unique_count), data = data_table)
summary(m2)
cat("Log:", r.squaredGLMM(m2), "\n")
#m2 = lm(sqrt(PCC)~sqrt(yearly_unique_count), data = data_table)
#summary(m2)
#cat("Sqrt:", r.squaredGLMM(m2), "\n")
telus_plot_bw <- ggplot(data = data_table, aes(x = log(yearly_unique_count), y = log(PCC)))+#, col = grouped, shape = grouped)) +
geom_point(size = 2) +  # Add scatterplot points
geom_smooth(method = "lm", formula = (y) ~ poly(x, 1), color = "blue") +  # Add a linear regression line
#geom_label(data = subset(data_table, Names == "Mount Revelstoke National Park"), aes(log(sum_intensity), log(PCC), label = paste0(Names))) +   # this allows a data label so I can understand what things are in this.
labs(title = "", x = "Log Transformed Telus Yearly Unique", y = "Log Transformed Parks Canada Official Visitor Count") +
theme(legend.position = 'none', plot.title = element_text(hjust = 0.5, size = 22), legend.text=element_text(size=24), axis.title = element_text(size=18), axis.text.x = element_text(size = 12), axis.text.y = element_text(size = 12))#+
#ylim(0, max(log(data_table$PCC)))+
#xlim(0, max(log(data_table$sum_intensity)))#+
#scale_x_continuous(trans='log') +
#scale_y_continuous(labels = scales::label_number(), trans='log') +
#coord_trans(x="log", y="log")
telus_plot_bw
#print(coef(m2)[2])
print(coef(m2)[2])
print(coef(m2)[1])
data_table <- long_data_telus
#data_table$normStrava <- data_table$sum_intensity/max(data_table$sum_intensity)
m3 = lm(PCC~(yearly_unique_count), data = data_table)
summary(m3)
r.squaredGLMM(m3)
m2 = lm(log(PCC)~log(yearly_unique_count), data = data_table)
summary(m2)
cat("Log:", r.squaredGLMM(m2), "\n")
#m2 = lm(sqrt(PCC)~sqrt(yearly_unique_count), data = data_table)
#summary(m2)
#cat("Sqrt:", r.squaredGLMM(m2), "\n")
telus_plot_bw <- ggplot(data = data_table, aes(x = log(yearly_unique_count), y = log(PCC)))+#, col = grouped, shape = grouped)) +
geom_point(size = 2) +  # Add scatterplot points
geom_smooth(method = "lm", formula = (y) ~ poly(x, 1), color = "blue") +  # Add a linear regression line
#geom_label(data = subset(data_table, Names == "Mount Revelstoke National Park"), aes(log(sum_intensity), log(PCC), label = paste0(Names))) +   # this allows a data label so I can understand what things are in this.
labs(title = "", x = "Log Transformed Telus Yearly Unique", y = "Log Transformed Parks Canada Official Visitor Count") +
theme(legend.position = 'none', plot.title = element_text(hjust = 0.5, size = 22), legend.text=element_text(size=24), axis.title = element_text(size=18), axis.text.x = element_text(size = 12), axis.text.y = element_text(size = 12))#+
#ylim(0, max(log(data_table$PCC)))+
#xlim(0, max(log(data_table$sum_intensity)))#+
#scale_x_continuous(trans='log') +
#scale_y_continuous(labels = scales::label_number(), trans='log') +
#coord_trans(x="log", y="log")
telus_plot_bw
#print(coef(m2)[1])
print(coef(m2))
data_table <- long_data_telus
#data_table$normStrava <- data_table$sum_intensity/max(data_table$sum_intensity)
m3 = lm(PCC~(yearly_unique_count), data = data_table)
summary(m3)
r.squaredGLMM(m3)
m2 = lm((PCC)~(yearly_unique_count), data = data_table)
summary(m2)
cat("Log:", r.squaredGLMM(m2), "\n")
#m2 = lm(sqrt(PCC)~sqrt(yearly_unique_count), data = data_table)
#summary(m2)
#cat("Sqrt:", r.squaredGLMM(m2), "\n")
telus_plot_bw <- ggplot(data = data_table, aes(x = log(yearly_unique_count), y = log(PCC)))+#, col = grouped, shape = grouped)) +
geom_point(size = 2) +  # Add scatterplot points
geom_smooth(method = "lm", formula = (y) ~ poly(x, 1), color = "blue") +  # Add a linear regression line
#geom_label(data = subset(data_table, Names == "Mount Revelstoke National Park"), aes(log(sum_intensity), log(PCC), label = paste0(Names))) +   # this allows a data label so I can understand what things are in this.
labs(title = "", x = "Log Transformed Telus Yearly Unique", y = "Log Transformed Parks Canada Official Visitor Count") +
theme(legend.position = 'none', plot.title = element_text(hjust = 0.5, size = 22), legend.text=element_text(size=24), axis.title = element_text(size=18), axis.text.x = element_text(size = 12), axis.text.y = element_text(size = 12))#+
#ylim(0, max(log(data_table$PCC)))+
#xlim(0, max(log(data_table$sum_intensity)))#+
#scale_x_continuous(trans='log') +
#scale_y_continuous(labels = scales::label_number(), trans='log') +
#coord_trans(x="log", y="log")
telus_plot_bw
print(coef(m2))
data_table <- long_data_telus
#data_table$normStrava <- data_table$sum_intensity/max(data_table$sum_intensity)
m3 = lm(PCC~(yearly_unique_count), data = data_table)
summary(m3)
r.squaredGLMM(m3)
m2 = lm((PCC)~(yearly_unique_count), data = data_table)
summary(m2)
cat("Log:", r.squaredGLMM(m2), "\n")
#m2 = lm(sqrt(PCC)~sqrt(yearly_unique_count), data = data_table)
#summary(m2)
#cat("Sqrt:", r.squaredGLMM(m2), "\n")
telus_plot_bw <- ggplot(data = data_table, aes(x = (yearly_unique_count), y = (PCC)))+#, col = grouped, shape = grouped)) +
geom_point(size = 2) +  # Add scatterplot points
geom_smooth(method = "lm", formula = (y) ~ poly(x, 1), color = "blue") +  # Add a linear regression line
#geom_label(data = subset(data_table, Names == "Mount Revelstoke National Park"), aes(log(sum_intensity), log(PCC), label = paste0(Names))) +   # this allows a data label so I can understand what things are in this.
labs(title = "", x = "Log Transformed Telus Yearly Unique", y = "Log Transformed Parks Canada Official Visitor Count") +
theme(legend.position = 'none', plot.title = element_text(hjust = 0.5, size = 22), legend.text=element_text(size=24), axis.title = element_text(size=18), axis.text.x = element_text(size = 12), axis.text.y = element_text(size = 12))#+
#ylim(0, max(log(data_table$PCC)))+
#xlim(0, max(log(data_table$sum_intensity)))#+
#scale_x_continuous(trans='log') +
#scale_y_continuous(labels = scales::label_number(), trans='log') +
#coord_trans(x="log", y="log")
telus_plot_bw
print(coef(m2))
data_table <- long_data_telus
#data_table$normStrava <- data_table$sum_intensity/max(data_table$sum_intensity)
m3 = lm(PCC~(yearly_unique_count), data = data_table)
summary(m3)
r.squaredGLMM(m3)
m2 = lm((PCC)~(yearly_unique_count), data = data_table)
summary(m2)
cat("Log:", r.squaredGLMM(m2), "\n")
#m2 = lm(sqrt(PCC)~sqrt(yearly_unique_count), data = data_table)
#summary(m2)
#cat("Sqrt:", r.squaredGLMM(m2), "\n")
telus_plot_bw <- ggplot(data = data_table, aes(x = log(yearly_unique_count), y = log(PCC)))+#, col = grouped, shape = grouped)) +
geom_point(size = 2) +  # Add scatterplot points
geom_smooth(method = "lm", formula = (y) ~ poly(x, 1), color = "blue") +  # Add a linear regression line
#geom_label(data = subset(data_table, Names == "Mount Revelstoke National Park"), aes(log(sum_intensity), log(PCC), label = paste0(Names))) +   # this allows a data label so I can understand what things are in this.
labs(title = "", x = "Log Transformed Telus Yearly Unique", y = "Log Transformed Parks Canada Official Visitor Count") +
theme(legend.position = 'none', plot.title = element_text(hjust = 0.5, size = 22), legend.text=element_text(size=24), axis.title = element_text(size=18), axis.text.x = element_text(size = 12), axis.text.y = element_text(size = 12))#+
#ylim(0, max(log(data_table$PCC)))+
#xlim(0, max(log(data_table$sum_intensity)))#+
#scale_x_continuous(trans='log') +
#scale_y_continuous(labels = scales::label_number(), trans='log') +
#coord_trans(x="log", y="log")
telus_plot_bw
print(coef(m2))
?log
data_table <- long_data_telus
#data_table$normStrava <- data_table$sum_intensity/max(data_table$sum_intensity)
m3 = lm(PCC~(yearly_unique_count), data = data_table)
summary(m3)
r.squaredGLMM(m3)
m2 = lm((PCC)~(yearly_unique_count), data = data_table)
summary(m2)
cat("Log:", r.squaredGLMM(m2), "\n")
#m2 = lm(sqrt(PCC)~sqrt(yearly_unique_count), data = data_table)
#summary(m2)
#cat("Sqrt:", r.squaredGLMM(m2), "\n")
telus_plot_bw <- ggplot(data = data_table, aes(x = log10(yearly_unique_count), y = log10(PCC)))+#, col = grouped, shape = grouped)) +
geom_point(size = 2) +  # Add scatterplot points
geom_smooth(method = "lm", formula = (y) ~ poly(x, 1), color = "blue") +  # Add a linear regression line
#geom_label(data = subset(data_table, Names == "Mount Revelstoke National Park"), aes(log(sum_intensity), log(PCC), label = paste0(Names))) +   # this allows a data label so I can understand what things are in this.
labs(title = "", x = "Log Transformed Telus Yearly Unique", y = "Log Transformed Parks Canada Official Visitor Count") +
theme(legend.position = 'none', plot.title = element_text(hjust = 0.5, size = 22), legend.text=element_text(size=24), axis.title = element_text(size=18), axis.text.x = element_text(size = 12), axis.text.y = element_text(size = 12))#+
#ylim(0, max(log(data_table$PCC)))+
#xlim(0, max(log(data_table$sum_intensity)))#+
#scale_x_continuous(trans='log') +
#scale_y_continuous(labels = scales::label_number(), trans='log') +
#coord_trans(x="log", y="log")
telus_plot_bw
print(coef(m2))
data_table <- long_data_telus
#data_table$normStrava <- data_table$sum_intensity/max(data_table$sum_intensity)
m3 = lm(PCC~(yearly_unique_count), data = data_table)
summary(m3)
r.squaredGLMM(m3)
m2 = lm(log10(PCC)~log10(yearly_unique_count), data = data_table)
summary(m2)
cat("Log:", r.squaredGLMM(m2), "\n")
#m2 = lm(sqrt(PCC)~sqrt(yearly_unique_count), data = data_table)
#summary(m2)
#cat("Sqrt:", r.squaredGLMM(m2), "\n")
telus_plot_bw <- ggplot(data = data_table, aes(x = log10(yearly_unique_count), y = log10(PCC)))+#, col = grouped, shape = grouped)) +
geom_point(size = 2) +  # Add scatterplot points
geom_smooth(method = "lm", formula = (y) ~ poly(x, 1), color = "blue") +  # Add a linear regression line
#geom_label(data = subset(data_table, Names == "Mount Revelstoke National Park"), aes(log(sum_intensity), log(PCC), label = paste0(Names))) +   # this allows a data label so I can understand what things are in this.
labs(title = "", x = "Log Transformed Telus Yearly Unique", y = "Log Transformed Parks Canada Official Visitor Count") +
theme(legend.position = 'none', plot.title = element_text(hjust = 0.5, size = 22), legend.text=element_text(size=24), axis.title = element_text(size=18), axis.text.x = element_text(size = 12), axis.text.y = element_text(size = 12))#+
#ylim(0, max(log(data_table$PCC)))+
#xlim(0, max(log(data_table$sum_intensity)))#+
#scale_x_continuous(trans='log') +
#scale_y_continuous(labels = scales::label_number(), trans='log') +
#coord_trans(x="log", y="log")
telus_plot_bw
print(coef(m2))
data_table <- long_data_telus
#data_table$normStrava <- data_table$sum_intensity/max(data_table$sum_intensity)
m3 = lm(PCC~(yearly_unique_count), data = data_table)
summary(m3)
r.squaredGLMM(m3)
m2 = lm(log(PCC)~log(yearly_unique_count), data = data_table)
summary(m2)
cat("Log:", r.squaredGLMM(m2), "\n")
#m2 = lm(sqrt(PCC)~sqrt(yearly_unique_count), data = data_table)
#summary(m2)
#cat("Sqrt:", r.squaredGLMM(m2), "\n")
telus_plot_bw <- ggplot(data = data_table, aes(x = log(yearly_unique_count), y = log(PCC)))+#, col = grouped, shape = grouped)) +
geom_point(size = 2) +  # Add scatterplot points
geom_smooth(method = "lm", formula = (y) ~ poly(x, 1), color = "blue") +  # Add a linear regression line
#geom_label(data = subset(data_table, Names == "Mount Revelstoke National Park"), aes(log(sum_intensity), log(PCC), label = paste0(Names))) +   # this allows a data label so I can understand what things are in this.
labs(title = "", x = "Log Transformed Telus Yearly Unique", y = "Log Transformed Parks Canada Official Visitor Count") +
theme(legend.position = 'none', plot.title = element_text(hjust = 0.5, size = 22), legend.text=element_text(size=24), axis.title = element_text(size=18), axis.text.x = element_text(size = 12), axis.text.y = element_text(size = 12))#+
#ylim(0, max(log(data_table$PCC)))+
#xlim(0, max(log(data_table$sum_intensity)))#+
#scale_x_continuous(trans='log') +
#scale_y_continuous(labels = scales::label_number(), trans='log') +
#coord_trans(x="log", y="log")
telus_plot_bw
print(coef(m2))
data_table <- long_data_telus
#data_table$normStrava <- data_table$sum_intensity/max(data_table$sum_intensity)
m3 = lm(PCC~(yearly_unique_count), data = data_table)
summary(m3)
r.squaredGLMM(m3)
m2 = lm((PCC)~(yearly_unique_count), data = data_table)
summary(m2)
cat("Log:", r.squaredGLMM(m2), "\n")
#m2 = lm(sqrt(PCC)~sqrt(yearly_unique_count), data = data_table)
#summary(m2)
#cat("Sqrt:", r.squaredGLMM(m2), "\n")
telus_plot_bw <- ggplot(data = data_table, aes(x = log(yearly_unique_count), y = log(PCC)))+#, col = grouped, shape = grouped)) +
geom_point(size = 2) +  # Add scatterplot points
geom_smooth(method = "lm", formula = (y) ~ poly(x, 1), color = "blue") +  # Add a linear regression line
#geom_label(data = subset(data_table, Names == "Mount Revelstoke National Park"), aes(log(sum_intensity), log(PCC), label = paste0(Names))) +   # this allows a data label so I can understand what things are in this.
labs(title = "", x = "Log Transformed Telus Yearly Unique", y = "Log Transformed Parks Canada Official Visitor Count") +
theme(legend.position = 'none', plot.title = element_text(hjust = 0.5, size = 22), legend.text=element_text(size=24), axis.title = element_text(size=18), axis.text.x = element_text(size = 12), axis.text.y = element_text(size = 12))#+
#ylim(0, max(log(data_table$PCC)))+
#xlim(0, max(log(data_table$sum_intensity)))#+
#scale_x_continuous(trans='log') +
#scale_y_continuous(labels = scales::label_number(), trans='log') +
#coord_trans(x="log", y="log")
telus_plot_bw
print(coef(m2))
library(devtools)
load_all()
setwd("C:\\Users\\matth\\rPackage\\wildlifeHI")
load_all()
hi_recreation()
